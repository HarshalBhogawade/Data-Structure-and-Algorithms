/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:



    //selfdone 
    ListNode* oddEvenList(ListNode* head) {
        //no head or only one node
        if(!head || !head->next) return head;
        //if only two node , no traversal required
        if(head->next->next==nullptr) return head;
        ListNode* Dum1 = new ListNode (-1);
        ListNode* Dum2 = new ListNode (-1);
        Dum1->next = head;
        Dum2->next = head->next;
        ListNode* odd = Dum1->next;
        ListNode* even = Dum2->next;
        while(odd && even && even->next){
            odd->next = even->next;
            odd = even->next;
            even->next = odd->next;
            even = odd->next;
        }
        odd->next = Dum2->next;
        return head;
    }
};